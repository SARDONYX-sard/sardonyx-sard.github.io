<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Spelling of SARDONYX</title><link>https://sardonyx-sard.github.io/en/posts/</link><description>Recent content in Posts on Spelling of SARDONYX</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2021 &lt;a href="https://www.wangchucheng.com/">C. Wang&lt;/a> and &lt;a href="https://www.ruiqima.com/">R. Ma&lt;/a></copyright><lastBuildDate>Wed, 15 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://sardonyx-sard.github.io/en/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Relocating the blog</title><link>https://sardonyx-sard.github.io/en/posts/2021/12/move-blog/</link><pubDate>Wed, 15 Dec 2021 00:00:00 +0000</pubDate><guid>https://sardonyx-sard.github.io/en/posts/2021/12/move-blog/</guid><description>next.js to hugo I found out that there is a program that can easily create a static site with go binaries.
The library hugo is very fast because it&amp;rsquo;s made with go.
It&amp;rsquo;s also very easy to change the theme, which I really appreciate.
Anyway, I don&amp;rsquo;t have a habit of writing blogs, so it probably doesn&amp;rsquo;t mean much to me.</description></item><item><title>From jpg to webp</title><link>https://sardonyx-sard.github.io/en/posts/2021/5/webp/</link><pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate><guid>https://sardonyx-sard.github.io/en/posts/2021/5/webp/</guid><description>Why do we use webp? I&amp;rsquo;m currently taking a PHP course at Udemy, where I learned about the webp extension.
It seems to be an extension created by Google that can compress images with reversible compression and alpha (transparency).
Free image samples from the Internet Try to convert a free image from the net to webp The following is a sample image I&amp;rsquo;ll be using. These are images that I used in my blog in the past, and may use in the future.</description></item><item><title>Static Typing</title><link>https://sardonyx-sard.github.io/en/posts/2021/4/typescript/</link><pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate><guid>https://sardonyx-sard.github.io/en/posts/2021/4/typescript/</guid><description>Types of variables In the last article, I talked about variables. Boxes, and that they might be a good idea after all.
Now, there are two types of programming languages: dynamically typed and statically typed, and there is a mechanism to fix the type of data to be stored in a variable.
Let&amp;rsquo;s talk about that&amp;hellip;
In JavaScript, which I often write.
First, I would like to mention that there are several types of data that can be stored in variables.</description></item><item><title>On the image of variables and classes</title><link>https://sardonyx-sard.github.io/en/posts/2021/4/valiable-and-class/</link><pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate><guid>https://sardonyx-sard.github.io/en/posts/2021/4/valiable-and-class/</guid><description>The question of whether variables are boxes and their destructive and non-destructive behavior When you first learned about variables and classes, what was the image you were taught?
When I first learned about them, I was taught that variables are like boxes.
However, this was a little difficult for me to visualize.
The first time I learned this, I was taught that a variable is like a box, but this was a little hard to visualize, because once you put data into a variable, when you took it out, it was separated into copying and extracting data.</description></item><item><title>Running a feap program using Docker</title><link>https://sardonyx-sard.github.io/en/posts/2021/4/docker-for-feap/</link><pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate><guid>https://sardonyx-sard.github.io/en/posts/2021/4/docker-for-feap/</guid><description>Preface feap(A Finite Element Analysis Program)
This is a finite element analysis program in Japanese.
I was asked by an acquaintance if I could execute the learning code of this program, so I created an environment using Docker.
The code I created is here
The official website of feap is here
Suffering First, I searched on GitHub for Docker feap and no luck, and got only one hit.
I found the Dockerfile, but the link specified in the file was broken, so I couldn&amp;rsquo;t build it.</description></item></channel></rss>